// Generated by CoffeeScript 1.3.2
(function() {
  var altitude, arDrone, client, file, fs, last_state, last_threshold, pressed_keys, state, stdin;

  fs = require('fs');

  file = '/tmp/decibel.txt';

  stdin = process.stdin;

  stdin.setRawMode(true);

  stdin.resume();

  stdin.setEncoding('utf8');

  pressed_keys = {};

  arDrone = require('ar-drone');

  client = arDrone.createClient();

  altitude = void 0;

  client.config('general:navdata_demo', 'FALSE');

  client.on('navdata', function(data) {
    var target;
    if (data.demo) {
      altitude = data.demo.altitudeMeters * 100;
      target = last_threshold;
      if ((target - altitude) > -50 && (target - altitude) < 50) {
        console.log(altitude);
        return client.stop();
      }
    }
  });

  client.takeoff();

  state = 'land';

  last_state = null;

  last_threshold = null;

  setInterval(function() {
    return fs.readFile(file, 'utf8', function(err, data) {
      var threshold, tier;
      tier = parseInt(data);
      if (tier > -5) {
        state = 'up';
      } else {
        state = 'land';
      }
      if (tier < -5) {
        threshold = 500;
      } else if (tier < -5) {
        threshold = 750;
      } else if (tier < -4) {
        threshold = 1000;
      } else if (tier < -3) {
        threshold = 1250;
      } else if (tier < -2) {
        threshold = 1600;
      } else if (tier < -1) {
        threshold = 1900;
      } else if (tier < 0) {
        threshold = 2100;
      } else if (tier < 1) {
        threshold = 2500;
      } else if (tier < 2) {
        threshold = 2700;
      } else if (tier < 3) {
        threshold = 3100;
      } else if (tier < 4) {
        threshold = 3400;
      } else if (tier < 6) {
        threshold = 4000;
      } else if (tier >= 6) {
        threshold = 4500;
        state = 'flip';
      }
      if (state !== last_state) {
        console.log("State: " + state);
      }
      if (threshold !== last_threshold) {
        console.log("Threshold: " + threshold, tier, altitude);
        if (altitude < threshold) {
          console.log(altitude, threshold, 'go up');
          client.up(1);
        }
        if (altitude > threshold) {
          console.log(altitude, threshold, 'go down');
          client.down(1);
        }
        if (state === 'flip') {
          client.animate('flipAhead', 15);
        }
      }
      last_state = state;
      return last_threshold = threshold;
    });
  }, 30);

  stdin.on('data', function(key) {
    if (key === '\u0003') {
      process.exit();
    }
    if (key === 'g') {
      return client.land();
    }
  });

}).call(this);
